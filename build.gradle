buildscript {
  ext {
    javaVersion = JavaVersion.VERSION_1_8
    gradleWrapperVersion = "6.0.1"
    junitJupiterVersion = "5.3.1"
    lombokVersion = "1.18.10"
    javaeeVersion = "8.0.1"
    log4jVersion = "2.12.1"
  }
}

plugins {
  id("war")
  id("io.franzbecker.gradle-lombok") version "3.2.0"
  id("com.github.ben-manes.versions") version "0.27.0"
  id("io.spring.dependency-management") version "1.0.8.RELEASE"
}

wrapper {
  gradleVersion = project.gradleWrapperVersion
}

lombok {
  version = project.lombokVersion
}

dependencyManagement {
  imports {
    mavenBom("org.junit:junit-bom:${project.junitJupiterVersion}")
    mavenBom("org.apache.logging.log4j:log4j-bom:${project.log4jVersion}")
  }
}

allprojects {
  version = "1.0.1-SNAPSHOT"
  group = "com.github.daggerok"
}

java {
  sourceCompatibility = project.javaVersion
  targetCompatibility = project.javaVersion
}

repositories {
  mavenCentral()
}

dependencies {
  providedCompile("javax:javaee-api:${project.javaeeVersion}")
  /*testImplementation "org.assertj:assertj-core:3.11.1"
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine"*/
}

apply(from: "https://raw.githubusercontent.com/daggerok/payara-micro-gradle-plugin-build-script/master/gradle/payara-micro-gradle-plugin.gradle")
defaultTasks("clean", "bundle")

project(":multi") {
  apply(plugin: "io.franzbecker.gradle-lombok")
  lombok {
    version = project.lombokVersion
  }

  apply(plugin: "java")
  java {
    sourceCompatibility = project.javaVersion
    targetCompatibility = project.javaVersion
  }

  apply(from: project.file("../gradle/payara-micro-gradle-plugin.gradle"))
  //apply(plugin: "war") // providedCompile
  dependencies {
    providedCompile("javax:javaee-api:${project.javaeeVersion}")
  }

  defaultTasks("clean", "bundle")
}
